{
  "version": 3,
  "sources": ["../../../app/routes/_grid.sign-in.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/_grid.sign-in.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/_grid.sign-in.tsx\");\n  import.meta.hot.lastModified = \"1701808081016.2646\";\n}\n// REMIX HMR END\n\nimport { Form, useLocation } from '@remix-run/react';\nimport { redirect } from '@remix-run/node';\nimport { commitSession, getSession } from '~/session';\nexport const meta = () => {\n  return [{\n    title: 'Sign in - Movie App'\n  }];\n};\nexport async function action({\n  request\n}) {\n  const session = await getSession(request.headers.get('Cookie'));\n\n  // If authenticated, redirect to the homepage.\n  if (session.has('user')) {\n    return redirect('/');\n  }\n  const data = await request.formData();\n  const redirectUrl = data.get('redirectUrl') || '/';\n\n  // Validate the user credentials.\n  const user = await fetch('https://auth.provider.com/validate', {\n    method: 'POST',\n    body: data\n  }).then(response => response.json(), () => null);\n  if (user != null) {\n    session.set('user', user);\n  }\n  if (!session.has('user')) {\n    session.flash('error', 'Failed to sign in: invalid credentials.');\n  }\n\n  // Forward any sign-in errors to the client.\n  if (!session.has('user')) {\n    return redirect('/sign-in', {\n      headers: {\n        'Set-Cookie': await commitSession(session)\n      }\n    });\n  }\n\n  // Sign in the user and redirect to the homepage.\n  return redirect(redirectUrl, {\n    headers: {\n      'Set-Cookie': await commitSession(session)\n    }\n  });\n}\nexport default function SignInPage() {\n  _s();\n  const {\n    state\n  } = useLocation();\n  return <div>\n      <Form method=\"post\" className=\"space-y-5 md:max-w-sm mx-auto my-20\">\n        <h1 className=\"text-4xl font-extrabold mb-8 text-center\">Sign in</h1>\n        <input type=\"hidden\" name=\"redirectUrl\" value={state?.redirectUrl} />\n\n        <p>\n          <input name=\"email\" type=\"email\" placeholder=\"E-mail address\" autoComplete=\"email\" className=\"w-full\" tabIndex={1} required />\n        </p>\n        <p>\n          <input name=\"password\" type=\"password\" placeholder=\"Password\" autoComplete=\"current-password\" className=\"w-full\" tabIndex={1} required />\n        </p>\n        <button type=\"submit\" className=\"bg-neutral-700 w-full\" tabIndex={1}>\n          Sign in\n        </button>\n      </Form>\n    </div>;\n}\n_s(SignInPage, \"FO3uhfHQFxifE5/pZVC1vAVIA9s=\", false, function () {\n  return [useLocation];\n});\n_c = SignInPage;\nvar _c;\n$RefreshReg$(_c, \"SignInPage\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAsBA,kBAAyB;AAsDjB;AA3ER,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,mCAAqC,EAAE;AAAA,EAChF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA8B;AAC9B,cAAY,IAAI,eAAe;AACjC;AAMO,IAAM,OAAO,MAAM;AACxB,SAAO,CAAC;AAAA,IACN,OAAO;AAAA,EACT,CAAC;AACH;AAyCe,SAAR,aAA8B;AACnC,KAAG;AACH,QAAM;AAAA,IACJ;AAAA,EACF,IAAI,YAAY;AAChB,SAAO,mDAAC,SACJ,6DAAC,QAAK,QAAO,QAAO,WAAU,uCAC5B;AAAA,uDAAC,QAAG,WAAU,4CAA2C,uBAAzD;AAAA;AAAA;AAAA;AAAA,WAAgE;AAAA,IAChE,mDAAC,WAAM,MAAK,UAAS,MAAK,eAAc,OAAO,+BAAO,eAAtD;AAAA;AAAA;AAAA;AAAA,WAAmE;AAAA,IAEnE,mDAAC,OACC,6DAAC,WAAM,MAAK,SAAQ,MAAK,SAAQ,aAAY,kBAAiB,cAAa,SAAQ,WAAU,UAAS,UAAU,GAAG,UAAQ,QAA3H;AAAA;AAAA;AAAA;AAAA,WAA4H,KAD9H;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACA,mDAAC,OACC,6DAAC,WAAM,MAAK,YAAW,MAAK,YAAW,aAAY,YAAW,cAAa,oBAAmB,WAAU,UAAS,UAAU,GAAG,UAAQ,QAAtI;AAAA;AAAA;AAAA;AAAA,WAAuI,KADzI;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACA,mDAAC,YAAO,MAAK,UAAS,WAAU,yBAAwB,UAAU,GAAG,uBAArE;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,OAZF;AAAA;AAAA;AAAA;AAAA,SAaA,KAdG;AAAA;AAAA;AAAA;AAAA,SAeL;AACJ;AACA,GAAG,YAAY,gCAAgC,OAAO,WAAY;AAChE,SAAO,CAAC,WAAW;AACrB,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,YAAY;AAE7B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
